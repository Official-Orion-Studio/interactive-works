"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[381],{1358:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"core/singletons","title":"Singletons","description":"Interactive allows you to create Services and Controllers in the server and client respectively. Folliwing the phylosophy of creating once, and exposing it in a singular point of access.","source":"@site/docs/core/singletons.md","sourceDirName":"core","slug":"/core/singletons","permalink":"/interactive-works/docs/core/singletons","draft":false,"unlisted":false,"editUrl":"https://github.com/Official-Orion-Studio/interactive-works/edit/main/docs/core/singletons.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mySidebar","previous":{"title":"Installation","permalink":"/interactive-works/docs/installation"},"next":{"title":"Lifecycles","permalink":"/interactive-works/docs/core/lifecycles"}}');var r=i(4848),s=i(8453);const c={},l="Singletons",o={},a=[{value:"Lifecycles",id:"lifecycles",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"singletons",children:"Singletons"})}),"\n",(0,r.jsx)(n.p,{children:"Interactive allows you to create Services and Controllers in the server and client respectively. Folliwing the phylosophy of creating once, and exposing it in a singular point of access."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Services run on the server and they are limited to certain lifecycles being used that can only be used on the client."}),"\n",(0,r.jsx)(n.li,{children:"Controllers run on the client and they are not limited to lifecycles."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"lifecycles",children:"Lifecycles"}),"\n",(0,r.jsxs)(n.p,{children:["Singletons (and later on Components) can implement lifecycles themselves. The main lifecycles are ",(0,r.jsx)(n.code,{children:"onInit"})," and ",(0,r.jsx)(n.code,{children:"onStart"}),"."]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["All lifecycles should start with the ",(0,r.jsx)(n.code,{children:"on"})," word, this is the only way (as of right now) that lifecycles will be registered for services implementing them."]})}),"\n",(0,r.jsxs)(n.p,{children:["The way to implement custom-made lifecycles is via the ",(0,r.jsx)(n.code,{children:"modding"})," library. Which will be revisited on a later chapter."]}),"\n",(0,r.jsxs)(n.p,{children:["For the next example though, we are going to be using the ",(0,r.jsx)(n.code,{children:"utility"})," library so we can implement an ",(0,r.jsx)(n.code,{children:"onPlayerAdded"})," lifecycle as shown below"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",metastring:'title="src/server/services/first.luau"',children:'local Players = game:GetService("Players")\n\nlocal framework = require(...)\nlocal utility = framework.utility\n\nlocal firstService = {\n    name = "firstService"\n}\n\nfunction firstService:constructor()\n    self.addedSignals = {}\nend\n\nfunction firstService:onStart()\n    utility.setupLifecycle(self.addedSignals, "onPlayerAdded")\n\n    Players.PlayerAdded:Connect(function(player)\n        utility.initLifecycle(self.addedSignals, "onPlayerJoin", player)\n    end)\nend\n\nreturn framework.createService(firstService)\n'})}),"\n",(0,r.jsx)(n.p,{children:"And another service can use it:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",metastring:'title="src/server/services/second.luau"',children:'local framework = require(...)\n\nlocal secondService = {\n    name = "secondService"\n}\n\nfunction secondService:onPlayerAdded(player: Player)\n    print(player .. " has joined the game!")\nend\n\nreturn framework.createService(secondService)\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Have in mind that it doesn't matter if ",(0,r.jsx)(n.code,{children:"secondService"})," is resolved first than ",(0,r.jsx)(n.code,{children:"firstService"}),", lifecycles are binded if there's not a listener at the moment is resolved."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>l});var t=i(6540);const r={},s=t.createContext(r);function c(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);